[
  {
    "id": "TC001",
    "title": "User Registration Success",
    "description": "Verify that a new user can register successfully with valid credentials and receive the correct role assignment.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the registration page."
      },
      {
        "type": "action",
        "description": "Enter valid and unique email and password."
      },
      {
        "type": "action",
        "description": "Select user role (guest or partner)."
      },
      {
        "type": "action",
        "description": "Submit the registration form."
      },
      {
        "type": "assertion",
        "description": "Confirm registration is successful and user is redirected to appropriate dashboard based on role."
      },
      {
        "type": "assertion",
        "description": "Verify the user record is created in the database with correct role."
      },
      {
        "type": "assertion",
        "description": "Validate Firebase authentication token is issued."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Login Success with Correct Credentials",
    "description": "Check that users can login successfully with valid credentials and access permitted pages based on role.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page."
      },
      {
        "type": "action",
        "description": "Input valid email and password."
      },
      {
        "type": "action",
        "description": "Click login button."
      },
      {
        "type": "assertion",
        "description": "Verify login is successful and access token is stored."
      },
      {
        "type": "assertion",
        "description": "Confirm user is redirected to correct dashboard for their role."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "User Login Failure with Incorrect Credentials",
    "description": "Verify that login fails with invalid credentials and appropriate error message is displayed.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page."
      },
      {
        "type": "action",
        "description": "Input invalid email or incorrect password."
      },
      {
        "type": "action",
        "description": "Click login button."
      },
      {
        "type": "assertion",
        "description": "Check that login attempt is rejected."
      },
      {
        "type": "assertion",
        "description": "Verify error message informs user of incorrect credentials."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Role-based Access Control Enforcement",
    "description": "Ensure that users only access pages and API endpoints authorized for their given role.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as guest and attempt to access partner and admin restricted pages."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied with proper error or redirect."
      },
      {
        "type": "action",
        "description": "Login as partner and try to access admin-only functionality."
      },
      {
        "type": "assertion",
        "description": "Confirm access is blocked appropriately."
      },
      {
        "type": "action",
        "description": "Login as admin and verify unrestricted access to all admin dashboards and controls."
      },
      {
        "type": "assertion",
        "description": "Ensure all API requests validate Firebase token and role before servicing."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Hotel Search with Multiple Filters",
    "description": "Validate that searching hotels with various filter combinations returns correct real-time results.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to hotel search page."
      },
      {
        "type": "action",
        "description": "Apply location filter."
      },
      {
        "type": "action",
        "description": "Select date range for availability."
      },
      {
        "type": "action",
        "description": "Set room type and price range filters."
      },
      {
        "type": "action",
        "description": "Click search and wait for results."
      },
      {
        "type": "assertion",
        "description": "Verify hotels displayed match all applied filters."
      },
      {
        "type": "assertion",
        "description": "Confirm results reflect current availability from live database."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Hotel Booking Normal Flow",
    "description": "Ensure a user can successfully book a hotel room that is available, and booking reflects in the system.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as guest user."
      },
      {
        "type": "action",
        "description": "Select a hotel with available rooms."
      },
      {
        "type": "action",
        "description": "Choose dates, number of guests and room type."
      },
      {
        "type": "action",
        "description": "Proceed to booking confirmation page."
      },
      {
        "type": "action",
        "description": "Enter payment details and submit booking."
      },
      {
        "type": "assertion",
        "description": "Verify booking is confirmed with details shown."
      },
      {
        "type": "assertion",
        "description": "Confirm booking record is created in the database with correct user and hotel information."
      },
      {
        "type": "assertion",
        "description": "Check that hotel availability is updated accordingly."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Booking Attempt for Unavailable Room",
    "description": "Verify system prevents booking of rooms that are not available for selected dates.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Select hotel and dates where no room availability exists."
      },
      {
        "type": "action",
        "description": "Attempt to proceed with booking."
      },
      {
        "type": "assertion",
        "description": "Verify system blocks booking and displays appropriate out-of-availability message."
      },
      {
        "type": "assertion",
        "description": "Ensure no booking record is created and inventory remains unchanged."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Partner Property Management",
    "description": "Verify that hotel partners can add, update, and delete property listings through their portal.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as partner."
      },
      {
        "type": "action",
        "description": "Navigate to property management page."
      },
      {
        "type": "action",
        "description": "Add a new property with valid data and upload images."
      },
      {
        "type": "assertion",
        "description": "Confirm property is added and visible in partner portal listing."
      },
      {
        "type": "action",
        "description": "Edit the property details and save changes."
      },
      {
        "type": "assertion",
        "description": "Verify updates are reflected immediately and accurately."
      },
      {
        "type": "action",
        "description": "Delete a property and confirm removal."
      },
      {
        "type": "assertion",
        "description": "Ensure property no longer appears for the partner or guests."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Messaging System Functionality",
    "description": "Check that messaging between guests and partners works correctly, storing messages persistently and delivering them in real time.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as guest and send a message to a partner."
      },
      {
        "type": "assertion",
        "description": "Verify message is sent and appears in partner's inbox immediately."
      },
      {
        "type": "action",
        "description": "Login as partner and reply to the message."
      },
      {
        "type": "assertion",
        "description": "Confirm guest receives reply in their inbox."
      },
      {
        "type": "assertion",
        "description": "Check that all messages are stored and retrievable from the database."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Review Submission and Sentiment Analysis",
    "description": "Ensure guests can submit hotel reviews and that sentiment analysis runs correctly, classifying reviews in UI components.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as guest with completed booking."
      },
      {
        "type": "action",
        "description": "Navigate to hotel review page and submit a new review with rating and text."
      },
      {
        "type": "assertion",
        "description": "Confirm review is saved successfully."
      },
      {
        "type": "assertion",
        "description": "Verify that sentiment analysis classifies review sentiment and displays it accordingly."
      },
      {
        "type": "assertion",
        "description": "Review appears in partner and admin review management pages."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Image Upload and Management with ImageKit.io",
    "description": "Validate image upload, optimization, and management functionality for property listings using ImageKit.io integration.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as partner and navigate to image upload section."
      },
      {
        "type": "action",
        "description": "Select multiple images to upload and submit."
      },
      {
        "type": "assertion",
        "description": "Verify images are uploaded successfully and optimized by ImageKit.io."
      },
      {
        "type": "assertion",
        "description": "Confirm images appear correctly in property galleries across devices."
      },
      {
        "type": "action",
        "description": "Delete an uploaded image."
      },
      {
        "type": "assertion",
        "description": "Ensure image is removed from database and UI."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Admin Dashboard User Management",
    "description": "Verify admin can view, promote, demote, and remove users with secure validation.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as admin."
      },
      {
        "type": "action",
        "description": "Navigate to user management page."
      },
      {
        "type": "action",
        "description": "Search for specific users using filters."
      },
      {
        "type": "assertion",
        "description": "Confirm accurate filtered user list response from API."
      },
      {
        "type": "action",
        "description": "Promote a guest user to partner role."
      },
      {
        "type": "assertion",
        "description": "Verify role update persists and user gains partner privileges."
      },
      {
        "type": "action",
        "description": "Delete or deactivate a user account."
      },
      {
        "type": "assertion",
        "description": "Ensure user is removed or disabled and cannot login further."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "UI Responsiveness and Accessibility Across Devices",
    "description": "Check that UI components render correctly and maintain accessibility compliance on multiple screen sizes and devices.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open key pages (homepage, search, booking, partner portal, admin dashboard) on desktop browser."
      },
      {
        "type": "assertion",
        "description": "Verify all components display correctly without overlap or distortion."
      },
      {
        "type": "action",
        "description": "Resize viewport to tablet and mobile dimensions."
      },
      {
        "type": "assertion",
        "description": "Confirm responsive layout adjusts gracefully and navigation remains usable."
      },
      {
        "type": "action",
        "description": "Test UI navigation and controls with keyboard only."
      },
      {
        "type": "assertion",
        "description": "Verify accessibility standards are met (focus visible, ARIA attributes present)."
      },
      {
        "type": "action",
        "description": "Activate dark and light theme toggles."
      },
      {
        "type": "assertion",
        "description": "Ensure UI updates theme colors consistently and persist user preference."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "API Security and Data Validation",
    "description": "Confirm server-side API endpoints enforce Firebase token verification and validate inputs with Zod to prevent unauthorized and malformed requests.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send API requests with invalid or no Firebase authentication token."
      },
      {
        "type": "assertion",
        "description": "Verify server rejects requests with 401 Unauthorized errors."
      },
      {
        "type": "action",
        "description": "Send API requests with invalid data schema."
      },
      {
        "type": "assertion",
        "description": "Confirm server returns 400 errors and descriptive validation messages."
      },
      {
        "type": "action",
        "description": "Send valid authenticated requests with correct data."
      },
      {
        "type": "assertion",
        "description": "Validate normal API responses and data processing."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Performance Under Expected Load",
    "description": "Test system responsiveness and stability under simulated typical and peak user load conditions.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate multiple concurrent users performing hotel searches and bookings."
      },
      {
        "type": "assertion",
        "description": "Monitor server response times and verify they meet performance benchmarks."
      },
      {
        "type": "action",
        "description": "Simulate high volume image uploads and partner portal actions concurrently."
      },
      {
        "type": "assertion",
        "description": "Validate system remains stable, with no crashes and acceptable latency."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Booking Conflict Handling",
    "description": "Ensure concurrent booking attempts for the same room correctly handle race conditions preventing double booking.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate two users attempting to book the last available room at the same time."
      },
      {
        "type": "assertion",
        "description": "Verify that only one booking is successfully processed."
      },
      {
        "type": "assertion",
        "description": "Confirm the other user receives a proper notification of unavailability."
      },
      {
        "type": "assertion",
        "description": "Database integrity is maintained with no duplicate bookings."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Review Rating Edge Cases",
    "description": "Test review system handling of boundary and invalid rating inputs.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to submit a review with minimum (e.g. 0) and maximum (e.g. 5) allowed ratings."
      },
      {
        "type": "assertion",
        "description": "Verify submission succeeds for valid boundary ratings."
      },
      {
        "type": "action",
        "description": "Attempt to submit review with rating values outside valid range or as non-numeric."
      },
      {
        "type": "assertion",
        "description": "Confirm system rejects invalid rating inputs with error messages."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Partner Revenue Analytics Accuracy",
    "description": "Check that revenue analytics in partner portal correctly aggregate booking data and display accurate statistics over various timeframes.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as partner and open revenue analytics dashboard."
      },
      {
        "type": "action",
        "description": "Select different time ranges (daily, monthly, yearly)."
      },
      {
        "type": "assertion",
        "description": "Verify revenue statistics update to reflect booking data accurately."
      },
      {
        "type": "assertion",
        "description": "Ensure charts and numbers match database aggregates precisely."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Admin Alert and Security Event Handling",
    "description": "Validate that the admin dashboard receives security alerts and events, and can view, acknowledge, and resolve them.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as admin and open security alerts page."
      },
      {
        "type": "assertion",
        "description": "Verify historical security events are listed with timestamps and details."
      },
      {
        "type": "action",
        "description": "Acknowledge and mark an alert as resolved."
      },
      {
        "type": "assertion",
        "description": "Confirm alert status updates in the system and UI."
      },
      {
        "type": "action",
        "description": "Trigger a sample security alert condition (e.g. multiple failed logins)."
      },
      {
        "type": "assertion",
        "description": "Ensure a new alert is generated and visible on admin dashboard."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "File Upload Security Validation",
    "description": "Check that the system properly validates and restricts file uploads for allowed types and size limits to prevent security risks.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to upload allowed image files under size limit."
      },
      {
        "type": "assertion",
        "description": "Files are uploaded successfully and stored safely."
      },
      {
        "type": "action",
        "description": "Attempt to upload disallowed file types or files exceeding size limit."
      },
      {
        "type": "assertion",
        "description": "Uploads are rejected with clear validation messages."
      },
      {
        "type": "assertion",
        "description": "No malicious files are stored or executed on the server."
      }
    ]
  }
]
